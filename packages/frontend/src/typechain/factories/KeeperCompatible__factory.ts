/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  KeeperCompatible,
  KeeperCompatibleInterface,
} from "../KeeperCompatible";

const _abi = [
  {
    inputs: [],
    name: "OnlySimulatedBackend",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "checkData",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class KeeperCompatible__factory {
  static readonly abi = _abi;
  static createInterface(): KeeperCompatibleInterface {
    return new utils.Interface(_abi) as KeeperCompatibleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KeeperCompatible {
    return new Contract(address, _abi, signerOrProvider) as KeeperCompatible;
  }
}
