/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Main, MainInterface } from "../Main";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategyAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "AddStrategy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategyAddr",
        type: "address",
      },
    ],
    name: "DeleteStrategy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "deleteStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "strategyAddr",
        type: "address",
      },
    ],
    name: "getCuotaByStrategy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStrategies",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114698061010d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637cb9b5441161005b5780637cb9b544146100d85780638da5cb5b146100f4578063b49a60bb14610112578063f2fde38b146101315761007d565b806326d9108a1461008257806365c67ea51461009e578063715018a6146100ce575b600080fd5b61009c60048036038101906100979190610c99565b61014d565b005b6100b860048036038101906100b39190610c99565b610221565b6040516100c59190610cdf565b60405180910390f35b6100d6610299565b005b6100f260048036038101906100ed9190610e40565b610321565b005b6100fc610428565b6040516101099190610eab565b60405180910390f35b61011a610451565b6040516101289291906110ce565b60405180910390f35b61014b60048036038101906101469190610c99565b6106fc565b005b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600061019d9190610b44565b6001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550506101da8160026107f490919063ffffffff16565b508073ffffffffffffffffffffffffffffffffffffffff167f3a46f78feb4efb66f401c419e0ad4329fbd51b12ea8cb06c7ba44ea50c097cda60405160405180910390a250565b60008173ffffffffffffffffffffffffffffffffffffffff16636bacc53f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561026e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102929190611131565b9050919050565b6102a1610824565b73ffffffffffffffffffffffffffffffffffffffff166102bf610428565b73ffffffffffffffffffffffffffffffffffffffff1614610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c906111bb565b60405180910390fd5b61031f600061082c565b565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508181600001908051906020019061037c929190610b84565b50828160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103d48360026108f090919063ffffffff16565b508273ffffffffffffffffffffffffffffffffffffffff167f766c5c82287ce4e5048b6265dd6f65985a5fb600f5d34fcb679e58b8a23178148360405161041b9190611214565b60405180910390a2505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60608060006104606002610920565b90506000815167ffffffffffffffff81111561047f5761047e610d15565b5b6040519080825280602002602001820160405280156104b257816020015b606081526020019060019003908161049d5790505b5090506000825167ffffffffffffffff8111156104d2576104d1610d15565b5b6040519080825280602002602001820160405280156105005781602001602082028036833780820191505090505b50905060005b83518110156106ee57600084828151811061052457610523611236565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201805461058a90611294565b80601f01602080910402602001604051908101604052809291908181526020018280546105b690611294565b80156106035780601f106105d857610100808354040283529160200191610603565b820191906000526020600020905b8154815290600101906020018083116105e657829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050806000015185848151811061067c5761067b611236565b5b6020026020010181905250806020015184848151811061069f5761069e611236565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050505080806106e6906112f5565b915050610506565b508181945094505050509091565b610704610824565b73ffffffffffffffffffffffffffffffffffffffff16610722610428565b73ffffffffffffffffffffffffffffffffffffffff1614610778576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076f906111bb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df906113b0565b60405180910390fd5b6107f18161082c565b50565b600061081c836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610941565b905092915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610918836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610a55565b905092915050565b6060600061093083600001610ac5565b905060608190508092505050919050565b60008083600101600084815260200190815260200160002054905060008114610a4957600060018261097391906113d0565b905060006001866000018054905061098b91906113d0565b90508181146109fa5760008660000182815481106109ac576109ab611236565b5b90600052602060002001549050808760000184815481106109d0576109cf611236565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480610a0e57610a0d611404565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610a4f565b60009150505b92915050565b6000610a618383610b21565b610aba578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610abf565b600090505b92915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610b1557602002820191906000526020600020905b815481526020019060010190808311610b01575b50505050509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b508054610b5090611294565b6000825580601f10610b625750610b81565b601f016020900490600052602060002090810190610b809190610c0a565b5b50565b828054610b9090611294565b90600052602060002090601f016020900481019282610bb25760008555610bf9565b82601f10610bcb57805160ff1916838001178555610bf9565b82800160010185558215610bf9579182015b82811115610bf8578251825591602001919060010190610bdd565b5b509050610c069190610c0a565b5090565b5b80821115610c23576000816000905550600101610c0b565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c6682610c3b565b9050919050565b610c7681610c5b565b8114610c8157600080fd5b50565b600081359050610c9381610c6d565b92915050565b600060208284031215610caf57610cae610c31565b5b6000610cbd84828501610c84565b91505092915050565b6000819050919050565b610cd981610cc6565b82525050565b6000602082019050610cf46000830184610cd0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d4d82610d04565b810181811067ffffffffffffffff82111715610d6c57610d6b610d15565b5b80604052505050565b6000610d7f610c27565b9050610d8b8282610d44565b919050565b600067ffffffffffffffff821115610dab57610daa610d15565b5b610db482610d04565b9050602081019050919050565b82818337600083830152505050565b6000610de3610dde84610d90565b610d75565b905082815260208101848484011115610dff57610dfe610cff565b5b610e0a848285610dc1565b509392505050565b600082601f830112610e2757610e26610cfa565b5b8135610e37848260208601610dd0565b91505092915050565b60008060408385031215610e5757610e56610c31565b5b6000610e6585828601610c84565b925050602083013567ffffffffffffffff811115610e8657610e85610c36565b5b610e9285828601610e12565b9150509250929050565b610ea581610c5b565b82525050565b6000602082019050610ec06000830184610e9c565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f2c578082015181840152602081019050610f11565b83811115610f3b576000848401525b50505050565b6000610f4c82610ef2565b610f568185610efd565b9350610f66818560208601610f0e565b610f6f81610d04565b840191505092915050565b6000610f868383610f41565b905092915050565b6000602082019050919050565b6000610fa682610ec6565b610fb08185610ed1565b935083602082028501610fc285610ee2565b8060005b85811015610ffe5784840389528151610fdf8582610f7a565b9450610fea83610f8e565b925060208a01995050600181019050610fc6565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61104581610c5b565b82525050565b6000611057838361103c565b60208301905092915050565b6000602082019050919050565b600061107b82611010565b611085818561101b565b93506110908361102c565b8060005b838110156110c15781516110a8888261104b565b97506110b383611063565b925050600181019050611094565b5085935050505092915050565b600060408201905081810360008301526110e88185610f9b565b905081810360208301526110fc8184611070565b90509392505050565b61110e81610cc6565b811461111957600080fd5b50565b60008151905061112b81611105565b92915050565b60006020828403121561114757611146610c31565b5b60006111558482850161111c565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006111a560208361115e565b91506111b08261116f565b602082019050919050565b600060208201905081810360008301526111d481611198565b9050919050565b60006111e682610ef2565b6111f0818561115e565b9350611200818560208601610f0e565b61120981610d04565b840191505092915050565b6000602082019050818103600083015261122e81846111db565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112ac57607f821691505b602082108114156112c0576112bf611265565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061130082610cc6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611333576113326112c6565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061139a60268361115e565b91506113a58261133e565b604082019050919050565b600060208201905081810360008301526113c98161138d565b9050919050565b60006113db82610cc6565b91506113e683610cc6565b9250828210156113f9576113f86112c6565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212205a953f073cbcd38955cff07ac5981ae8e98d980920dca70ff9f9b422e1053f3964736f6c634300080a0033";

export class Main__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Main> {
    return super.deploy(overrides || {}) as Promise<Main>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Main {
    return super.attach(address) as Main;
  }
  connect(signer: Signer): Main__factory {
    return super.connect(signer) as Main__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainInterface {
    return new utils.Interface(_abi) as MainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Main {
    return new Contract(address, _abi, signerOrProvider) as Main;
  }
}
